{"version":3,"sources":["components/MarkdownInput/index.jsx","components/NoteDisplay/index.jsx","components/SideBar/index.jsx","index.jsx"],"names":["MarkdownInput","title","text","handleSave","type","onChange","e","target","value","className","onClick","NoteDisplay","content","Showdown","Converter","makeHtml","dangerouslySetInnerHTML","__html","SideBar","savedTitle","App","React","useState","setTitle","setText","setSavedTitle","getTitle","input","a","getText","note","JSON","stringify","parsednote","parse","parsedList","push","console","log","ReactDOM","render","document","getElementById"],"mappings":"0NAeeA,EAbM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAEnC,OACA,qCACC,uBAAOC,KAAK,OAAOC,SAAY,SAACC,GAAD,OAAOL,EAAMK,EAAEC,OAAOC,UACrD,0BAAUH,SAAU,SAACC,GAAD,OAAOJ,EAAKI,EAAEC,OAAOC,UACzC,qBAAKC,UAAU,YAAf,SACC,wBAAQA,UAAU,iBAAiBC,QAASP,EAA5C,wB,gBCGYQ,EATK,SAAC,GAAY,IAAXT,EAAU,EAAVA,KAEfU,GADY,IAAIC,IAASC,WACLC,SAASb,GAEnC,OACC,qBAAKc,wBAAyB,CAAEC,OAAQL,MCc3BM,EApBC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAEjB,OACC,uBAAOV,UAAU,oBAAjB,SACC,qBAAKA,UAAU,qFAAf,SACC,qBAAKA,UAAU,2BAAf,SACC,qBAAIA,UAAU,kEAAd,UACC,oBAAIA,UAAU,WAAd,SACE,wBAAQA,UAAU,iBAAlB,gCAEF,6BACCU,cCLDC,EAAM,WAAO,IAAD,EACSC,IAAMC,SAAS,IADxB,mBACVrB,EADU,KACHsB,EADG,OAEOF,IAAMC,SAAS,IAFtB,mBAEVpB,EAFU,KAEJsB,EAFI,OAGmBH,IAAMC,SAAS,IAHlC,mBAGVH,EAHU,KAGEM,EAHF,KAKXC,EAAQ,uCAAE,WAAMC,GAAN,SAAAC,EAAA,sDACfL,EAASI,GADM,2CAAF,sDAIRE,EAAO,uCAAE,WAAMF,GAAN,SAAAC,EAAA,sDACdJ,EAAQG,GADM,2CAAF,sDAeZ,OACA,sBAAKlB,UAAU,MAAf,UACC,cAAC,EAAD,CAASU,WAAYA,IACrB,uBAAMV,UAAU,qBAAhB,UACC,+CACA,sBAAKA,UAAU,UAAf,UACC,6BAAKR,IACL,cAAC,EAAD,CAAaC,KAAMA,OAEpB,qBAAKO,UAAU,aAAf,SACC,cAAC,EAAD,CAAeR,MAAOyB,EAAUxB,KAAM2B,EAAS1B,WArBhC,WAClB,IAAM2B,EAAOC,KAAKC,UAAU,CAAC/B,MAAOA,EAAOC,KAAMA,IAC3C+B,EAAaF,KAAKG,MAAMJ,GACxBK,EAAa,GACnBA,EAAWC,KAAKH,GAChBR,EAAcQ,EAAWhC,OACzBoC,QAAQC,IAAIR,GACZO,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,eAoBdI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d6e53472.chunk.js","sourcesContent":["import React from 'react';\n\nconst MarkdownInput =({title, text, handleSave}) => {\n\t\n\treturn(\n\t<>\n\t\t<input type=\"text\" onChange = {(e) => title(e.target.value)} />\n\t\t<textarea onChange={(e) => text(e.target.value)}/>\n\t\t<div className=\"buttonbox\">\n\t\t\t<button className=\"btn btn-danger\" onClick={handleSave}>Save</button>\n\t\t</div>\n\t</>\n\t)\n};\t\n\nexport default MarkdownInput;","import React from 'react';\nimport Showdown from 'showdown';\n\nconst NoteDisplay = ({text}) => {\n\tconst converter = new Showdown.Converter();\n\tconst content = converter.makeHtml(text);\n\n\treturn(\n\t\t<div dangerouslySetInnerHTML={{ __html: content }} />\n\t)\n};\n\nexport default NoteDisplay;","import React from 'react';\n\nconst SideBar = ({savedTitle}) => {\n\n\treturn (\n\t\t<aside className=\"col-2 p-0 bg-dark\">\n\t\t\t<nav className=\"navbar navbar-expand navbar-dark bg-dark flex-md-column flex-row align-items-start\">\n\t\t\t\t<div className=\"collapse navbar-collapse\">\n\t\t\t\t\t<ul className=\"flex-md-column flex-row navbar-nav w-100 justify-content-center\">\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\">ajouter une note</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t{savedTitle}\t\n\t          </li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</aside>\n\t);\n}\n\nexport default SideBar;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss'\nimport MarkdownInput from './components/MarkdownInput';\nimport NoteDisplay from './components/NoteDisplay';\nimport SideBar from './components/SideBar';\n\nconst App = () => {\n\tconst [title, setTitle] = React.useState('');\n\tconst [text, setText] = React.useState('');\n\tconst [savedTitle, setSavedTitle] = React.useState('')\n\n\tconst getTitle= async(input)=>{\n\t\tsetTitle(input);\n\t}\n\n\tconst getText= async(input)=>{\n\t\tsetText(input);\n\t}\n\n\tconst handleSave = () => {\n\t\tconst note = JSON.stringify({title: title, text: text});\t\n\t\tconst parsednote = JSON.parse(note);\n\t\tconst parsedList = [];\n\t\tparsedList.push(parsednote);\n\t\tsetSavedTitle(parsednote.title);\n\t\tconsole.log(note);\n\t\tconsole.log(parsednote);\n\t\tconsole.log(parsedList);\n\t};\n\n  return(\n\t\t<div className=\"row\">\n\t\t\t<SideBar savedTitle={savedTitle}/>\n\t\t\t<main className=\"col-10 p-0 bg-dark\">\n\t\t\t\t<h1>Mon Bloc-Note</h1>\n\t\t\t\t<div className=\"display\">\n\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t\t<NoteDisplay text={text}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputfield\">\n\t\t\t\t\t<MarkdownInput title={getTitle} text={getText} handleSave={handleSave}/>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}