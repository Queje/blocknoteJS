{"version":3,"sources":["components/MarkdownInput/index.jsx","components/NoteDisplay/index.jsx","components/SideBar/index.jsx","index.jsx"],"names":["MarkdownInput","title","text","handleSave","type","onChange","e","target","value","className","onClick","NoteDisplay","content","Showdown","Converter","makeHtml","dangerouslySetInnerHTML","__html","SideBar","savedNote","newTitle","newText","handleClick","map","note","index","App","loadData","loaded","JSON","parse","localStorage","getItem","React","useState","setTitle","setText","setSavedNote","getTitle","input","getText","console","log","tempdata","tempload","stringify","setItem","parsednote","ReactDOM","render","document","getElementById"],"mappings":"0MAeeA,EAbM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAEnC,OACA,qCACC,uBAAOC,KAAK,OAAOC,SAAY,SAACC,GAAD,OAAOL,EAAMK,EAAEC,OAAOC,UACrD,0BAAUH,SAAU,SAACC,GAAD,OAAOJ,EAAKI,EAAEC,OAAOC,UACzC,qBAAKC,UAAU,YAAf,SACC,wBAAQA,UAAU,iBAAiBC,QAASP,EAA5C,wB,gBCGYQ,EATK,SAAC,GAAY,IAAXT,EAAU,EAAVA,KAEfU,GADY,IAAIC,IAASC,WACLC,SAASb,GAEnC,OACC,qBAAKc,wBAAyB,CAAEC,OAAQL,MC2B3BM,EAjCC,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YAO/C,OACC,uBAAOb,UAAU,oBAAjB,SACC,qBAAKA,UAAU,qFAAf,SACC,qBAAKA,UAAU,2BAAf,SACC,qBAAIA,UAAU,kEAAd,UACC,oBAAIA,UAAU,WAAd,SACE,wBAAQA,UAAU,iBAAiBC,QAXpB,WACrBU,EAAS,iBACTC,EAAQ,kBASF,gCAEF,qBAAKZ,UAAU,OAAf,SACEU,GACD,kCAEEA,EAAUI,KAAI,SAACC,EAAMC,GAAP,OACb,qBAAgBf,QAAS,kBAAMY,EAAYG,IAA3C,UAAoDD,EAAKvB,MAAzD,KAAkEuB,EAAKtB,OAA9DuB,oBCdbC,EAAM,WAEX,IAAMC,EAAS,WACd,IAAMC,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,SAC/C,OAAOJ,GAAkB,CAAC,CAAC3B,MAAO,WAAYC,KAAM,cAJpC,EAOS+B,IAAMC,SAAS,IAPxB,mBAOVjC,EAPU,KAOHkC,EAPG,OAQOF,IAAMC,SAAS,IARtB,mBAQVhC,EARU,KAQJkC,EARI,OASiBH,IAAMC,SAASP,KAThC,mBASVR,EATU,KASCkB,EATD,KAWXC,EAAU,SAACC,GAChBJ,EAASI,IAGJC,EAAS,SAACD,GACfH,EAAQG,IAkBP,OACD,sBAAK9B,UAAU,MAAf,UACC,cAAC,EAAD,CAASU,UAAWA,EAAWC,SAAUkB,EAAUjB,QAASmB,EAASlB,YATpD,SAACG,GACnBgB,QAAQC,IAAIjB,GACZ,IAAMkB,EAAWd,KAAKC,MAAMC,aAAaC,QAAQ,SAASP,GAC1Da,EAASK,EAAS1C,OAClBuC,EAAQG,EAASzC,SAMhB,uBAAMO,UAAU,qBAAhB,UACC,+CACA,sBAAKA,UAAU,UAAf,UACC,6BAAKR,IACL,cAAC,EAAD,CAAaC,KAAMA,OAEpB,qBAAKO,UAAU,aAAf,SACC,cAAC,EAAD,CAAeR,MAAOqC,EAAUpC,KAAMsC,EAASrC,WAzBhC,WAClB,IAAMyC,EAAWjB,IACXH,EAAOK,KAAKgB,UAAL,CAAgB,CAAC5C,MAAOA,EAAOC,KAAMA,IAArC,mBAA8C0C,KAC3Db,aAAae,QAAQ,OAAQtB,GAC7B,IAAMuB,EAAapB,IACnBU,EAAaU,eA2BfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7c29b500.chunk.js","sourcesContent":["import React from 'react';\n\nconst MarkdownInput =({title, text, handleSave}) => {\n\t\n\treturn(\n\t<>\n\t\t<input type=\"text\" onChange = {(e) => title(e.target.value)} />\n\t\t<textarea onChange={(e) => text(e.target.value)}/>\n\t\t<div className=\"buttonbox\">\n\t\t\t<button className=\"btn btn-danger\" onClick={handleSave}>Save</button>\n\t\t</div>\n\t</>\n\t)\n};\t\n\nexport default MarkdownInput;","import React from 'react';\nimport Showdown from 'showdown';\n\nconst NoteDisplay = ({text}) => {\n\tconst converter = new Showdown.Converter();\n\tconst content = converter.makeHtml(text);\n\n\treturn(\n\t\t<div dangerouslySetInnerHTML={{ __html: content }} />\n\t)\n};\n\nexport default NoteDisplay;","import React from 'react';\n\nconst SideBar = ({savedNote, newTitle, newText, handleClick}) => {\n\n\tconst handleNewNote = () => {\n\t\tnewTitle(\"nouvelle note\");\n\t\tnewText(\"nouvelle note\");\n\t}\n\n\treturn (\n\t\t<aside className=\"col-2 p-0 bg-dark\">\n\t\t\t<nav className=\"navbar navbar-expand navbar-dark bg-dark flex-md-column flex-row align-items-start\">\n\t\t\t\t<div className=\"collapse navbar-collapse\">\n\t\t\t\t\t<ul className=\"flex-md-column flex-row navbar-nav w-100 justify-content-center\">\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={handleNewNote}>ajouter une note</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<div className=\"list\">\n\t\t\t\t\t\t{(savedNote) &&\n\t\t\t\t\t\t\t<section> \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsavedNote.map((note, index) => (\n\t\t\t\t\t\t\t\t\t\t<li key={index} onClick={() => handleClick(index)}>{note.title}, {note.text}</li>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</aside>\n\t);\n}\n\nexport default SideBar;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss'\nimport MarkdownInput from './components/MarkdownInput';\nimport NoteDisplay from './components/NoteDisplay';\nimport SideBar from './components/SideBar';\n\nconst App = () => {\n\n\tconst loadData=() => {\n\t\tconst loaded = JSON.parse(localStorage.getItem('bloc'));\n\t\treturn loaded ? loaded : [{title: \"no notes\", text: \"no notes\"}];\n\t};\n\n\tconst [title, setTitle] = React.useState('');\n\tconst [text, setText] = React.useState('');\n\tconst [savedNote, setSavedNote] = React.useState(loadData());\n\t\n\tconst getTitle= (input)=>{\n\t\tsetTitle(input);\n\t}\n\t\n\tconst getText= (input)=>{\n\t\tsetText(input);\n\t}\n\t\n\tconst handleSave = () => {\n\t\tconst tempload = loadData();\n\t\tconst note = JSON.stringify([{title: title, text: text},...tempload]);\n\t\tlocalStorage.setItem('bloc', note);\t\n\t\tconst parsednote = loadData();\n\t\tsetSavedNote(parsednote);\n\t};\n\n\tconst handleClick =(index) => {\n\t\tconsole.log(index)\n\t\tconst tempdata = JSON.parse(localStorage.getItem('bloc'))[index]\n\t\tgetTitle(tempdata.title);\n\t\tgetText(tempdata.text);\n\t}\n\n  \treturn(\n\t\t<div className=\"row\">\n\t\t\t<SideBar savedNote={savedNote} newTitle={getTitle} newText={getText} handleClick={handleClick}/>\n\t\t\t<main className=\"col-10 p-0 bg-dark\">\n\t\t\t\t<h1>Mon Bloc-Note</h1>\n\t\t\t\t<div className=\"display\">\n\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t\t<NoteDisplay text={text}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputfield\">\n\t\t\t\t\t<MarkdownInput title={getTitle} text={getText} handleSave={handleSave}/>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}